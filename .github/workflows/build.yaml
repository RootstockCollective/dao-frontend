name: Build dApp

on: pull_request

# Declare default permissions as read only.
permissions: read-all

jobs:
  cache_dependencies:
    name: Cache Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Cache npm global cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Cache .next/cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: next-cache-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: Build Next.js
        run: |
          cp .env.testnet.local .env.local
          npm run build


  build_test:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Restore npm cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Restore .next/cache cache
        uses: actions/cache/restore@v4
        with:
          path: .next/cache
          key: next-cache-${{ hashFiles('package-lock.json') }}

      - name: Prepare Docker context with cache
        run: |
          # Log cache sizes
          echo "npm cache size: $(du -sh ~/.npm 2>/dev/null | cut -f1 || echo '0')"
          echo ".next/cache size: $(du -sh .next/cache 2>/dev/null | cut -f1 || echo '0')"

          # Backup and modify .dockerignore
          cp .dockerignore .dockerignore.backup
          sed -i '/^\.next$/d' .dockerignore

          # Ensure directories exist
          mkdir -p .next/cache

      - name: Build
        id: build-image
        env:
          IMAGE_TAG: ${{ github.sha }}
          PROFILE: testnet.local
        run: |
          # Build docker container with npm cache mount
          docker build \
            --build-arg PROFILE="$PROFILE" \
            --build-arg NEXT_PUBLIC_BUILD_ID=${{ github.sha }} \
            --volume $HOME/.npm:/root/.npm \
            .