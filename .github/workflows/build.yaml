name: Build dApp

on: pull_request

# Declare default permissions as read only.
permissions: read-all

jobs:
  cache_dependencies:
    name: Cache Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Cache .next/cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: next-cache-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: Build Next.js
        run: npm run build


  build_test:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: Prepare Docker context with cache
        run: |
          # Log cache size
          echo "node_modules size: $(du -sh node_modules 2>/dev/null | cut -f1 || echo '0')"
          
          # Backup and modify .dockerignore
          cp .dockerignore .dockerignore.backup
          sed -i '/^node_modules$/d' .dockerignore
          
          # Ensure directory exists
          mkdir -p node_modules
      - name: Build
        id: build-image
        env:
          IMAGE_TAG: ${{ github.sha }}
          PROFILE: testnet.local
        run: |
          # Build a docker container to test build passes
          docker build --build-arg PROFILE="$PROFILE" --build-arg NEXT_PUBLIC_BUILD_ID=${{ github.sha }} --no-cache .
