name: Deploy Storybook site to Pages

on:
  workflow_dispatch: # Manually triggered from GitHub Actions tab
  push:
    branches: [main, develop]

# Declare default permissions as read only.
permissions: read-all
  
concurrency: 
  group: "storybook"
  cancel-in-progress: false
  
jobs:
  build:
    runs-on: ubuntu-latest
    permissions: 
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 #v4.4.0
        with:
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: npm i
      - name: Build storybook
        run: npm run build-storybook
      - name: Fix image paths for subdirectory deployment
        run: |
          echo "=== Starting image path fix process ==="
          
          # Check if storybook-static directory exists
          if [ ! -d "./storybook-static" ]; then
            echo "‚ùå ERROR: storybook-static directory not found!"
            exit 1
          fi
          echo "‚úÖ Found storybook-static directory"
          
          # Count total JS files
          total_js_files=$(find ./storybook-static -maxdepth 1 -name "*.js" | wc -l)
          echo "üìÅ Found $total_js_files JS files in storybook-static"
          
          # Find files with image paths BEFORE replacement
          echo "üîç Scanning for files with absolute image paths..."
          files_with_images=$(find ./storybook-static -maxdepth 1 -name "*.js" -exec grep -l 'src:"/images/\|"/images/' {} \; 2>/dev/null | wc -l)
          echo "üìä Found $files_with_images files containing absolute image paths"
          
          if [ $files_with_images -gt 0 ]; then
            echo "üìã Files to be modified:"
            find ./storybook-static -maxdepth 1 -name "*.js" -exec grep -l 'src:"/images/\|"/images/' {} \; 2>/dev/null | head -5
          
            echo "üîç Sample matches before replacement:"
            find ./storybook-static -maxdepth 1 -name "*.js" -exec grep -n 'src:"/images/\|"/images/' {} \; 2>/dev/null | head -3
          
            echo "üîß Applying replacements..."
          
            # Replace src:"/images/ with src:"./images/
            replaced_count1=$(find ./storybook-static -maxdepth 1 -name "*.js" -exec grep -l 'src:"/images/' {} \; 2>/dev/null | wc -l)
            find ./storybook-static -maxdepth 1 -name "*.js" -exec sed -i 's|src:"/images/|src:"./images/|g' {} \; 2>/dev/null
            echo "‚úÖ Applied src: pattern replacement to $replaced_count1 files"
          
            # Replace "/images/ with "./images/
            replaced_count2=$(find ./storybook-static -maxdepth 1 -name "*.js" -exec grep -l '"/images/' {} \; 2>/dev/null | wc -l)
            find ./storybook-static -maxdepth 1 -name "*.js" -exec sed -i 's|"/images/|"./images/|g' {} \; 2>/dev/null
            echo "‚úÖ Applied general pattern replacement to $replaced_count2 files"
          
            # Verify changes
            echo "üîç Verifying changes - sample matches after replacement:"
            find ./storybook-static -maxdepth 1 -name "*.js" -exec grep -n 'src:"\./images/\|"\./images/' {} \; 2>/dev/null | head -3
          
            # Check if any absolute paths remain
            remaining=$(find ./storybook-static -maxdepth 1 -name "*.js" -exec grep -l 'src:"/images/\|"/images/' {} \; 2>/dev/null | wc -l)
            if [ $remaining -eq 0 ]; then
              echo "‚úÖ SUCCESS: All absolute image paths have been converted to relative paths"
            else
              echo "‚ö†Ô∏è  WARNING: $remaining files still contain absolute image paths"
              find ./storybook-static -maxdepth 1 -name "*.js" -exec grep -l 'src:"/images/\|"/images/' {} \; 2>/dev/null | head -3
            fi
          else
            echo "‚ÑπÔ∏è  No files with absolute image paths found - no changes needed"
          fi
          
          echo "=== Image path fix process completed ==="

      - name: Upload artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa #v3.0.1
        with:
          # Upload storybook build output
          path: './storybook-static'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: storybook
      url: https://rootstockcollective.github.io/dao-frontend
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b #v5.0.0
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e #v4.0.5